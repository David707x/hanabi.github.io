"use strict";(self.webpackChunkhanabi_github_io=self.webpackChunkhanabi_github_io||[]).push([[252],{6218:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return m}});var r=a(3117),i=a(102),n=(a(7294),a(3905)),l=["components"],o={id:"level-7",title:"Level 7 - Last Resorts"},s=void 0,c={unversionedId:"level-7",id:"level-7",title:"Level 7 - Last Resorts",description:"Special Moves",source:"@site/docs/level-7.mdx",sourceDirName:".",slug:"/level-7",permalink:"/docs/level-7",draft:!1,editUrl:"https://github.com/hanabi/hanabi.github.io/edit/main/docs/level-7.mdx",tags:[],version:"current",frontMatter:{id:"level-7",title:"Level 7 - Last Resorts"},sidebar:"mainSidebar",previous:{title:"Level 6 - Tempo Clues",permalink:"/docs/level-6"},next:{title:"Level 8 - End-Game",permalink:"/docs/level-8"}},d={},m=[{value:"Special Moves",id:"special-moves",level:2},{value:"The Scream Discard Chop Move (SDCM)",id:"the-scream-discard-chop-move-sdcm",level:3},{value:"The Generation Discard",id:"the-generation-discard",level:3},{value:"A Scream Discard Flowchart",id:"a-scream-discard-flowchart",level:3},{value:"General Principles",id:"general-principles",level:2},{value:"Lines",id:"lines",level:3},{value:"The All 4&#39;s Test",id:"the-all-4s-test",level:3},{value:"Blind-Playing Chop Moved Cards",id:"blind-playing-chop-moved-cards",level:3}],p={toc:m};function h(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"special-moves"},"Special Moves"),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"the-scream-discard-chop-move-sdcm"},"The Scream Discard Chop Move (SDCM)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("em",{parentName:"li"},"Chop Move")," is a tool to save multiple cards with one clue. However, sometimes you may not have a clue at all. One way to solve this situation is with a special kind of discard."),(0,n.kt)("li",{parentName:"ul"},"Typically, discarding is a last resort. So, if you have a known playable card in your hand, you can send a powerful message to your teammate by discarding a card instead. This is called a ",(0,n.kt)("em",{parentName:"li"},"Scream Discard"),". Since your teammate expected you to play, it is like screaming at them to let them know that things are very bad."),(0,n.kt)("li",{parentName:"ul"},"A ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," does two things:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},'The player being "screamed at" should permanently move their chop by one position.'),(0,n.kt)("li",{parentName:"ol"},'The player being "screamed at" is not allowed to discard on this turn. Instead, they must give a clue. If there are no normal ',(0,n.kt)("em",{parentName:"li"},"Play Clues")," or ",(0,n.kt)("em",{parentName:"li"},"Save Clues"),' to give, then they are allowed to give "stall" clues, like a ',(0,n.kt)("em",{parentName:"li"},"5 Stall"),". If there are no ",(0,n.kt)("em",{parentName:"li"},"5 Stalls"),' to give, they can even just "fill-in" some information on an already-clued card (and doing this should not cause a ',(0,n.kt)("em",{parentName:"li"},"Finesse"),")."))),(0,n.kt)("li",{parentName:"ul"},"Players are ",(0,n.kt)("strong",{parentName:"li"},"only allowed")," to ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," for ",(0,n.kt)("strong",{parentName:"li"},"cards that are playable or critical")," (or a needed 2 that isn't seen anywhere else). (This follows from ",(0,n.kt)("em",{parentName:"li"},"Save Principle"),".)"),(0,n.kt)("li",{parentName:"ul"},"Players are ",(0,n.kt)("strong",{parentName:"li"},"only allowed")," to ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," as an absolute last resort. This means ",(0,n.kt)("em",{parentName:"li"},"Scream Discards")," are almost always performed ",(0,n.kt)("strong",{parentName:"li"},"while the team is at 0 clues"),". (Less commonly, they can also be performed if the team is at 1 clue and the next person happens to be ",(0,n.kt)("em",{parentName:"li"},"Locked"),".)"),(0,n.kt)("li",{parentName:"ul"},"Players are ",(0,n.kt)("strong",{parentName:"li"},"not")," allowed to ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," for cards that are ",(0,n.kt)("em",{parentName:"li"},"one-away-from-playable"),"."),(0,n.kt)("li",{parentName:"ul"},"Players are ",(0,n.kt)("strong",{parentName:"li"},"not")," allowed to ",(0,n.kt)("em",{parentName:"li"},"Scream Discard"),' if there was some other, less dangerous way to save the card. It is a "last resort" move.'),(0,n.kt)("li",{parentName:"ul"},"Sometimes, a player will discard with a known-playable card in their hand, but they are ",(0,n.kt)("strong",{parentName:"li"},"not")," intending a ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," - it is some other special situation:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"It is not a ",(0,n.kt)("em",{parentName:"li"},"Scream Discard")," if the next player ",(0,n.kt)("strong",{parentName:"li"},"has")," to generate a clue for cluing the next player after that. This is called a ",(0,n.kt)("em",{parentName:"li"},"Generation Discard"),"; see below."),(0,n.kt)("li",{parentName:"ol"},"It is not a ",(0,n.kt)("em",{parentName:"li"},"Scream Discard"),' when the card that the player did not play was a "blind" card from a ',(0,n.kt)("em",{parentName:"li"},"Finesse")," ",(0,n.kt)("strong",{parentName:"li"},"and")," the blind card could also be in the next player's ",(0,n.kt)("em",{parentName:"li"},"Finesse Position"),".")))),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"the-generation-discard"},"The Generation Discard"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Usually, if someone discards a card instead of playing a known playable card, this would indicate a ",(0,n.kt)("em",{parentName:"li"},"Scream Discard Chop Move"),"."),(0,n.kt)("li",{parentName:"ul"},'However, if playing the card (player 1) would cause the next player to discard (player 2) and the next player after that (player 3) to have a critical and/or playable card "ride" on chop, it is a very bad situation. Thus, the discard is ',(0,n.kt)("strong",{parentName:"li"},"just")," for the purposes of generating a clue so that player 2 can clue player 3."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("em",{parentName:"li"},"Generation Discard")," is ",(0,n.kt)("strong",{parentName:"li"},"only"),' to be used as a last resort. If player 3 has something else to do (like play a card or give some obvious clue), then player 1 should just play their card and let the card "ride" on chop.')),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"a-scream-discard-flowchart"},"A Scream Discard Flowchart"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/hanabi/hanabi.github.io/main/static/img/flowcharts/scream-discard-flowchart.png"},"Here is a flowchart")," for determining whether something is a ",(0,n.kt)("em",{parentName:"p"},"Scream Discard Chop Move")," or a ",(0,n.kt)("em",{parentName:"p"},"Generation Discard"),". (Ignore the ",(0,n.kt)("em",{parentName:"p"},"Echo Scream Discard Chop Move")," for now.)"),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"general-principles"},"General Principles"),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"lines"},"Lines"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"During your turn, part of figuring out the best move involves looking into the future to see what the next player will do. If they discard, will it be okay? Is there some obvious clue that they will do? And so on."),(0,n.kt)("li",{parentName:"ul"},"As you get better at Hanabi, you will need to do this prediction not just for the next player, but for an entire go-around of the table. And as you really get good at Hanabi, you will need to do this for as far in the future as you can reasonably predict. (Sometimes, this means 15 moves or more in the future.)"),(0,n.kt)("li",{parentName:"ul"},'Similar to chess, initiating a move in which you can predict the next sequence of moves is called initiating a "line".'),(0,n.kt)("li",{parentName:"ul"},'In post-game reviews, we will often compare and hypothetically "play through" two different lines to see which one is better.')),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"the-all-4s-test"},"The All 4's Test"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"According to ",(0,n.kt)("em",{parentName:"li"},"Save Principle"),", the team must not let any critical and/or playable cards be discarded. So part of constructing a line is figuring out whether this might happen."),(0,n.kt)("li",{parentName:"ul"},"When considering a line, it is not safe to assume that a player will clue anything in your hand. You should perform the ",(0,n.kt)("em",{parentName:"li"},"All 4's Test"),": what would everyone do if I have all useless 4's in my hand? If a critical and/or playable card would get discarded, then the line has failed the test, and it is probably a bad idea.")),(0,n.kt)("br",null),(0,n.kt)("h3",{id:"blind-playing-chop-moved-cards"},"Blind-Playing Chop Moved Cards"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Often times, cards are ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," towards the beginning of the game. Normally, once the time comes, the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card will be directly clued in order to get it to play."),(0,n.kt)("li",{parentName:"ul"},"However, other times, the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card will sit there and will never be clued. As the game progresses towards the end, the player with the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card will learn more and more information about it. For example, they might accumulate a lot of negative clues on the card. Or, they might deduce that it is probably not any of the cards that are already played (which drastically reduces the possibilities towards the end of the game)."),(0,n.kt)("li",{parentName:"ul"},"A clever player who accumulates enough information about a ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card may determine that all of the possibilities for the card are playable. In this situation, they do not have to wait for their teammates to clue the card directly - they can simply blind-play the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card and it will work, regardless of which exact card it is."),(0,n.kt)("li",{parentName:"ul"},"Blind-playing cards in this manner is risky! It is fairly common for players to forgo cluing ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," cards directly in favor of using the other copy of the card in someone else's hand. (For example, it may be more efficient to use the non-",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," copy if it would be a 2-for-1 clue instead of a 1-for-1 clue.) Thus, there is always the chance that blind-playing a ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card in this manner will get a strike for the team (in the case where the other copy was used or in the case where the ",(0,n.kt)("em",{parentName:"li"},"Chop Move")," was a mistake)."),(0,n.kt)("li",{parentName:"ul"},"For this reason, clever players should try to blind-play their ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," cards if they have a pretty good chance of being playable, but ",(0,n.kt)("strong",{parentName:"li"},"only if the team has one or more strikes to spare"),"."),(0,n.kt)("li",{parentName:"ul"},"Subsequently, players should ",(0,n.kt)("strong",{parentName:"li"},"not")," clue a now-useless ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," card to prevent a future strike. The typical strategy is to just let it be ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," for the rest of the game:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"In the best case scenario, the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," player will naturally figure out that the card is trash and can safely discard it. Or, alternatively, they will keep the card ",(0,n.kt)("em",{parentName:"li"},"Chop Moved"),", but continue to discard other useless cards from their chop until the end of the game."),(0,n.kt)("li",{parentName:"ul"},"In the worst case scenario, the ",(0,n.kt)("em",{parentName:"li"},"Chop Moved")," player will try to blind-play the card and get a strike for the team. But this is not guaranteed, and even if they do, they will only do it if there is a strike to spare.")))))}h.isMDXComponent=!0},3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return h}});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(a),h=i,u=p["".concat(s,".").concat(h)]||p[h]||m[h]||n;return a?r.createElement(u,l(l({ref:t},d),{},{components:a})):r.createElement(u,l({ref:t},d))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,l=new Array(n);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<n;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);